{"version":3,"file":"index.js","sources":["../src/snippets.js","../src/javascript.js","../src/eslint.js"],"sourcesContent":["import { snippetCompletion as snip } from \"@codemirror/autocomplete\";\n/// A collection of JavaScript-related\n/// [snippets](#autocomplete.snippet).\nexport const snippets = [\n    snip(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    snip(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    snip(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    snip(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    snip(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    snip(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    snip(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n","import { parser } from \"lezer-javascript\";\nimport { LezerLanguage, LanguageSupport, delimitedIndent, flatIndent, continuedIndent, indentNodeProp, foldNodeProp, foldInside } from \"@codemirror/language\";\nimport { styleTags, tags as t } from \"@codemirror/highlight\";\nimport { completeFromList, ifNotIn } from \"@codemirror/autocomplete\";\nimport { snippets } from \"./snippets\";\n/// A language provider based on the [Lezer JavaScript\n/// parser](https://github.com/lezer-parser/javascript), extended with\n/// highlighting and indentation information.\nexport const javascriptLanguage = LezerLanguage.define({\n    parser: parser.configure({\n        props: [\n            indentNodeProp.add({\n                IfStatement: continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: continuedIndent({ except: /^\\s*({|catch|finally)\\b/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => -1,\n                \"Statement Property\": continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.state.doc.lineAt(context.node.from)) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.state.doc.lineAt(context.node.from)) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            styleTags({\n                \"get set async static\": t.modifier,\n                \"for while do if else switch try catch finally return throw break continue default case\": t.controlKeyword,\n                \"in of await yield void typeof delete instanceof\": t.operatorKeyword,\n                \"export import let var const function class extends\": t.definitionKeyword,\n                \"with debugger from as new\": t.keyword,\n                TemplateString: t.special(t.string),\n                Super: t.atom,\n                BooleanLiteral: t.bool,\n                this: t.self,\n                null: t.null,\n                Star: t.modifier,\n                VariableName: t.variableName,\n                \"CallExpression/VariableName\": t.function(t.variableName),\n                VariableDefinition: t.definition(t.variableName),\n                Label: t.labelName,\n                PropertyName: t.propertyName,\n                \"CallExpression/MemberExpression/PropertyName\": t.function(t.propertyName),\n                \"FunctionDeclaration/VariableDefinition\": t.function(t.definition(t.variableName)),\n                \"ClassDeclaration/VariableDefinition\": t.definition(t.className),\n                PropertyNameDefinition: t.definition(t.propertyName),\n                UpdateOp: t.updateOperator,\n                LineComment: t.lineComment,\n                BlockComment: t.blockComment,\n                Number: t.number,\n                String: t.string,\n                ArithOp: t.arithmeticOperator,\n                LogicOp: t.logicOperator,\n                BitOp: t.bitwiseOperator,\n                CompareOp: t.compareOperator,\n                RegExp: t.regexp,\n                Equals: t.definitionOperator,\n                \"Arrow : Spread\": t.punctuation,\n                \"( )\": t.paren,\n                \"[ ]\": t.squareBracket,\n                \"{ }\": t.brace,\n                \".\": t.derefOperator,\n                \", ;\": t.separator,\n                TypeName: t.typeName,\n                TypeDefinition: t.definition(t.typeName),\n                \"type enum interface implements namespace module declare\": t.definitionKeyword,\n                \"abstract global privacy readonly\": t.modifier,\n                \"is keyof unique infer\": t.operatorKeyword,\n                JSXAttributeValue: t.string,\n                JSXText: t.content,\n                \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": t.angleBracket,\n                \"JSXIdentifier JSXNameSpacedName\": t.tagName,\n                \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": t.propertyName\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\n/// A language provider for TypeScript.\nexport const typescriptLanguage = javascriptLanguage.configure({ dialect: \"ts\" });\n/// Language provider for JSX.\nexport const jsxLanguage = javascriptLanguage.configure({ dialect: \"jsx\" });\n/// Language provider for JSX + TypeScript.\nexport const tsxLanguage = javascriptLanguage.configure({ dialect: \"jsx ts\" });\n/// JavaScript support. Includes [snippet](#lang-javascript.snippets)\n/// completion.\nexport function javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new LanguageSupport(lang, javascriptLanguage.data.of({\n        autocomplete: ifNotIn([\"LineComment\", \"BlockComment\", \"String\"], completeFromList(snippets))\n    }));\n}\n","import { javascriptLanguage } from \"./javascript\";\n/// Connects an [ESLint](https://eslint.org/) linter to CodeMirror's\n/// [lint](#lint) integration. `eslint` should be an instance of the\n/// [`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\n/// class, and `config` an optional ESLint configuration. The return\n/// value of this function can be passed to [`linter`](#lint.linter)\n/// to create a JavaScript linting extension.\n///\n/// Note that ESLint targets node, and is tricky to run in the\n/// browser. The [eslint4b](https://github.com/mysticatea/eslint4b)\n/// and\n/// [eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\n/// packages may help with that.\nexport function esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n"],"names":["snip","t"],"mappings":"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"}